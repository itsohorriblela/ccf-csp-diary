20190301：快速判断奇偶：flag=n&1，若为奇数flag=1，若为偶数flag=0。
注意输出格式，输出为整数还是小说，输出几位数

20190302：堆栈可以调用#include<stack>源文件，堆栈初始化 stack<type> name，取堆栈中的值用top（）而不是pop（），别忘记（）！！！  
字符串变量声明 char str[n]
判断一个字符是否为数字if(c >='0' && c<='9')，判断是否为字母'a' 'z' 'A' 'Z'，将字符转换为数字char-'0'
while的条件全部运行完才会判断一次

20181201：if语句得判断条件搞错。。。某些值记得要初始化，多写个等于0没坏处

20181202：写了两个程序都不对，不知道哪里错了，只有20分。//服了 哥 这题目 黄灯不能走 
注意看范围，int的取值只有10的9次方左右，用longlong或ull变量，同样注意if（）里=和==。。。

20180901创建一个a[1000]的数组也不会很大，不会超出内存要求

20180902用三目运算符定义宏来快速定义min和max。#define max(x,y) ( x>y?x:y ) 当x>y时取x反之取y
题目即为求最小的右端值减去最大的左端值，用了vector去做，但感觉定义一个time[4000]的数组应该也可以。vector从标准输入流中初始化？王少奇只会先用临时变量
把标准输入流中的值取出来再用push_back，感觉比较麻烦

20180301switch的用法

20180302注意输出格式！每个数字之间是否有空格。注意循环中嵌套循环有可能导致取到相同的点。不要怕循环次数多复杂度高，先做出题目。

20171202是一个经典的问题，我钻牛角尖了，明明是循环队列的问题为什么偏偏要用数组，标记词越用越多，还做不出来。
采用双向队列，用一个flag标记每轮的报数（因为报数不用保存，用完+1到下一轮就可以了），每轮把队列第一个数取出来，如果不符合条件放入队尾，直到剩下最后一个数
注意empty（）要写成员函数deque.empty(),empty(deque)会导致编译错误，csp用的编译器太垃圾了

20170902 结构体用sort排序：sort()函数第三个参数设为一个bool变量为某个元素的大小判断
还是用暴力的方法 按照时间循环，每一秒判断是否有钥匙被拿走或者被放回，更新钥匙位置状态。不知道为什么不对，自闭了，只有十分

20170302 vector迭代器的使用方法 使用vector迭代器轻松解出
为什么不能直接students.erase(flag)而是要让他等于迭代器？ erase()函数必须要有返回值

20160902 一直说第2题是两个for循环嵌套，这题也是的，不过这个for循环是要再加一个是否结束循环的判断条件，不要固定思维。而且记得看一下每一次循环之后flag要不要重置

